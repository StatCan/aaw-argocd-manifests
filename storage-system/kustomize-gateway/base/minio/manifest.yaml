---
# Source: minio/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: minio-gateway
  namespace: "default"
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-10.1.6
    app.kubernetes.io/instance: minio-gateway
    app.kubernetes.io/managed-by: Helm
    app: minio-gateway
automountServiceAccountToken: true
secrets:
  - name: minio-gateway
---
# Source: minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: minio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-10.1.6
    app.kubernetes.io/instance: minio-gateway
    app.kubernetes.io/managed-by: Helm
    app: minio-gateway
spec:
  type: ClusterIP
  ports:
    - name: minio-api
      port: 9000
      targetPort: minio-api
      nodePort: null
    - name: minio-console
      port: 9001
      targetPort: minio-console
      nodePort: null
  selector:
    app.kubernetes.io/name: minio-gateway
    app.kubernetes.io/instance: minio-gateway
---
# Source: minio/templates/gateway/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: minio-gateway
  namespace: default
  labels:
    app.kubernetes.io/name: minio-gateway
    helm.sh/chart: minio-10.1.6
    app.kubernetes.io/instance: minio-gateway
    app.kubernetes.io/managed-by: Helm
    app: minio-gateway
spec:
  replicas: 2
  strategy:
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: minio-gateway
      app.kubernetes.io/instance: minio-gateway
  template:
    metadata:
      labels:
        app.kubernetes.io/name: minio-gateway
        helm.sh/chart: minio-10.1.6
        app.kubernetes.io/instance: minio-gateway
        app.kubernetes.io/managed-by: Helm
    spec:
      
      serviceAccountName: minio-gateway
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: minio-gateway
                    app.kubernetes.io/instance: minio-gateway
                namespaces:
                  - "default"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      initContainers:
        - command:
          - sh
          - -c
          - |
            echo '#!/bin/sh' > /custom/minio.sh
            echo 'echo "Waiting for sidecar..."' >> /custom/minio.sh
            echo 'while ! curl -s -f http://127.0.0.1:15020/healthz/ready; do sleep 1; done' >> /custom/minio.sh
            echo 'echo "Sidecar is ready."' >> /custom/minio.sh
            echo 'echo exec minio $@' >> /custom/minio.sh
            echo 'exec minio $@' >> /custom/minio.sh
            chmod 555 /custom/minio.sh
            chown nobody:nobody /custom/minio.sh
            echo "Wrote the minio.sh script to shared volume."
          image: busybox
          name: wait-for-sidecar
          volumeMounts:
          - mountPath: /custom
            name: minio-sh
      containers:
        - name: minio
          image: docker.io/bitnami/minio:2022.2.7-debian-10-r0
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          command:
            - sh
            - /minio.sh
          args:
            - --certs-dir
            - /opt/bitnami/minio/certs
            - gateway
            - azure
            - --console-address
            - :9001
          env:
            - name: AZURE_STORAGE_ACCOUNT
              valueFrom:
                secretKeyRef:
                  name: azure-blob-storage
                  key: storageAccountName
            - name: AZURE_STORAGE_KEY
              valueFrom:
                secretKeyRef:
                  name: azure-blob-storage
                  key: storageAccountKey
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-gateway-secret
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-gateway-secret
                  key: root-password
            - name: MINIO_PROMETHEUS_AUTH_TYPE
              value: "public"
            - name: MINIO_CONSOLE_PORT_NUMBER
              value: "9001"
            - name: MINIO_IAM_OPA_URL
              value: http://minio-gateway-opa:8181/v1/data/httpapi/authz
          envFrom:
          ports:
            - name: minio-api
              containerPort: 9000
              protocol: TCP
            - name: minio-console
              containerPort: 9001
              protocol: TCP
          resources:
            limits:
              cpu: "4"
              memory: 16Gi
            requests:
              cpu: "4"
              memory: 16Gi
          volumeMounts:
            - mountPath: /minio.sh
              name: minio-sh
              subPath: minio.sh
      volumes:
        - emptyDir: {}
          name: minio-sh
