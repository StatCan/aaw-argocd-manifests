---
# Source: etcd/templates/svc-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: etcd-minio-gateway-headless
  namespace: blair-drummond
  labels:
    app.kubernetes.io/name: etcd-minio-gateway
    helm.sh/chart: etcd-6.3.3
    app.kubernetes.io/instance: etcd-minio-gateway
  annotations:
    service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
spec:
  type: ClusterIP
  clusterIP: None
  publishNotReadyAddresses: true
  ports:
    - name: "client"
      port: 2379
      targetPort: client
    - name: "peer"
      port: 2380
      targetPort: peer
  selector:
    app.kubernetes.io/name: etcd-minio-gateway
    app.kubernetes.io/instance: etcd-minio-gateway
---
# Source: etcd/templates/svc.yaml
apiVersion: v1
kind: Service
metadata:
  name: etcd-minio-gateway
  namespace: blair-drummond
  labels:
    app.kubernetes.io/name: etcd-minio-gateway
    helm.sh/chart: etcd-6.3.3
    app.kubernetes.io/instance: etcd-minio-gateway
  annotations:
spec:
  type: ClusterIP
  ports:
    - name: "client"
      port: 2379
      targetPort: client
      nodePort: null
    - name: "peer"
      port: 2380
      targetPort: peer
      nodePort: null
  selector:
    app.kubernetes.io/name: etcd-minio-gateway
    app.kubernetes.io/instance: etcd-minio-gateway
---
# Source: etcd/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd-minio-gateway
  namespace: blair-drummond
  labels:
    app.kubernetes.io/name: etcd-minio-gateway
    helm.sh/chart: etcd-6.3.3
    app.kubernetes.io/instance: etcd-minio-gateway
spec:
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: etcd-minio-gateway
      app.kubernetes.io/instance: etcd-minio-gateway
  serviceName: etcd-minio-gateway-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: etcd-minio-gateway
        helm.sh/chart: etcd-6.3.3
        app.kubernetes.io/instance: etcd-minio-gateway
      annotations:
    spec:
      
      affinity:
        podAffinity:
          
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: etcd-minio-gateway
                    app.kubernetes.io/instance: etcd-minio-gateway
                namespaces:
                  - "blair-drummond"
                topologyKey: kubernetes.io/hostname
              weight: 1
        nodeAffinity:
          
      securityContext:
        fsGroup: 1001
      serviceAccountName: "default"
      containers:
        - name: etcd
          image: k8scc01covidacr.azurecr.io/etcd:3.5.0-debian-10-r64
          imagePullPolicy: "IfNotPresent"
          securityContext:
            runAsNonRoot: true
            runAsUser: 1001
          env:
            - name: BITNAMI_DEBUG
              value: "false"
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: MY_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ETCDCTL_API
              value: "3"
            - name: ETCD_ON_K8S
              value: "yes"
            - name: ETCD_START_FROM_SNAPSHOT
              value: "no"
            - name: ETCD_DISASTER_RECOVERY
              value: "no"
            - name: ETCD_NAME
              value: "$(MY_POD_NAME)"
            - name: ETCD_DATA_DIR
              value: "/bitnami/etcd/data"
            - name: ETCD_LOG_LEVEL
              value: "info"
            - name: ALLOW_NONE_AUTHENTICATION
              value: "yes"
            - name: ETCD_ADVERTISE_CLIENT_URLS
              value: "http://$(MY_POD_NAME).etcd-minio-gateway-headless.blair-drummond.svc.cluster.local:2379"
            - name: ETCD_LISTEN_CLIENT_URLS
              value: "http://0.0.0.0:2379"
            - name: ETCD_INITIAL_ADVERTISE_PEER_URLS
              value: "http://$(MY_POD_NAME).etcd-minio-gateway-headless.blair-drummond.svc.cluster.local:2380"
            - name: ETCD_LISTEN_PEER_URLS
              value: "http://0.0.0.0:2380"
            - name: ETCD_INITIAL_CLUSTER_TOKEN
              value: "etcd-cluster-k8s"
            - name: ETCD_INITIAL_CLUSTER_STATE
              value: "new"
            - name: ETCD_INITIAL_CLUSTER
              value: "etcd-minio-gateway-0=http://etcd-minio-gateway-0.etcd-minio-gateway-headless.blair-drummond.svc.cluster.local:2380,etcd-minio-gateway-1=http://etcd-minio-gateway-1.etcd-minio-gateway-headless.blair-drummond.svc.cluster.local:2380,etcd-minio-gateway-2=http://etcd-minio-gateway-2.etcd-minio-gateway-headless.blair-drummond.svc.cluster.local:2380"
            - name: ETCD_CLUSTER_DOMAIN
              value: "etcd-minio-gateway-headless.blair-drummond.svc.cluster.local"
          envFrom:
          ports:
            - name: client
              containerPort: 2379
              protocol: TCP
            - name: peer
              containerPort: 2380
              protocol: TCP
          livenessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/etcd/healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          readinessProbe:
            exec:
              command:
                - /opt/bitnami/scripts/etcd/healthcheck.sh
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
          lifecycle:
            preStop:
              exec:
                command:
                  - /opt/bitnami/scripts/etcd/prestop.sh
          resources:
            limits:
              cpu: "2"
              memory: 8Gi
            requests:
              cpu: "2"
              memory: 8Gi
          volumeMounts:
            - name: data
              mountPath: /bitnami/etcd
      volumes:
        - name: data
          emptyDir: {}
